### 영상의 산술 연산

- 영상의 덧셈 연산을 수식으로 표현할 경우 다음과 같다.
  $$
  dst(x, y) = src1(x, y)+src2(x, y)
  $$

  - 단 이렇게 할 경우 최댓값이 그레이스케일의 최댓값인 255를 넘는 경우가 생길 수 있기 때문에 포화 연산이 요구됨

- OpenCV에서는 이를 add()함수를 통해서 수행할 수 있다.

  - ```c++
    void add(InputArray src1, InputArray src2, OutputArray dst,
            InputArray mask = noArray(), int dtype = -1);
    ```

  - src1, src2 = 입력 행렬 또는 스칼라

  - dst = 입력 행렬과 같은 크기

  - mask 8비트 1채널 마스크 연산

![](./image1.png)

- 9, 10에서 이미지를 그레이스케일로 불러온다.
- 이미지의 사이즈가 다를 경우 연산이 되지 않으므로 15, 16에서 이미지 크기를 300x300으로 resize 해준다.
- 19에서 add를 통해서 이미지를 합친 연산의 결과



### 영상의 뺄셈 연산

```c++
void absdiff(InputArray src1, InputArray src2, OutputArray dst);
```

![](./image2.png)

- 34, 35에서 이미지를 그레이스케일로 로딩
- 37에서 이미지의 크기를 일치시킴
- src1 에서 src2를 뺀 결과
  - 가운데의 영역이 변화가 제일 심하기에 결과 이미지에서 표시가 되었다

### 영상의 논리연산

OR, AND 연산을 통한 논리 연산

![](./image3.png)

- 53~56 에서 이미지로딩 및 사이즈 설정을 한다.
- 60 , 61, 62, 63 = 각각 AND, OR, XOR, NOT 연산을 하는 이미지며 이에 대한 결과가 우측에 나와있다.